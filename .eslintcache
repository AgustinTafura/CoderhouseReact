[{"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\index.js":"1","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\reportWebVitals.js":"2","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\App.jsx":"3","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\UserContext.jsx":"4","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\CartContext.jsx":"5","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\CommercialContext.jsx":"6","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\OrderContext.jsx":"7","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\routes\\routes.jsx":"8","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\MercadoPagoContext.jsx":"9","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ScrollToTop\\index.jsx":"10","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\NavBar\\index.jsx":"11","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\AuthModal\\index.jsx":"12","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\routes\\helperRoutes.jsx":"13","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ThanksContainer.jsx":"14","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\HomeContainer.jsx":"15","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemDetailContainer.jsx":"16","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\BookingContainer.jsx":"17","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\CartContainer.jsx":"18","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\EmailContainer.jsx":"19","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\WelcomeContainer.jsx":"20","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemListContainer.jsx":"21","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\CheckoutContainer.jsx":"22","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\OrderContainer.jsx":"23","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\firebase\\index.jsx":"24","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemNavContainer.jsx":"25","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ListDropdownContainer.jsx":"26","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemDropdown.jsx":"27","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\NotFound\\index.jsx":"28","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\CartWidget\\index.jsx":"29","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemDetail\\index.jsx":"30","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\EmailConfirmModal\\index.jsx":"31","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\Item\\index.jsx":"32","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemCart\\index.jsx":"33","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ModalError\\index.jsx":"34","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemOrder\\index.jsx":"35","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemCount\\index.jsx":"36","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\Footer.jsx":"37","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\utils\\data\\index.jsx":"38"},{"size":501,"mtime":1621179202281,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":1618,"mtime":1621432999730,"results":"42","hashOfConfig":"40"},{"size":6752,"mtime":1619807386924,"results":"43","hashOfConfig":"40"},{"size":4371,"mtime":1619810184079,"results":"44","hashOfConfig":"40"},{"size":2002,"mtime":1619807477279,"results":"45","hashOfConfig":"40"},{"size":2512,"mtime":1619807429855,"results":"46","hashOfConfig":"40"},{"size":2245,"mtime":1621391352977,"results":"47","hashOfConfig":"40"},{"size":1894,"mtime":1621813958634,"results":"48","hashOfConfig":"40"},{"size":370,"mtime":1619211743488,"results":"49","hashOfConfig":"40"},{"size":7624,"mtime":1621388044269,"results":"50","hashOfConfig":"40"},{"size":12511,"mtime":1621391579064,"results":"51","hashOfConfig":"40"},{"size":540,"mtime":1619807015779,"results":"52","hashOfConfig":"40"},{"size":6657,"mtime":1621813873419,"results":"53","hashOfConfig":"40"},{"size":7902,"mtime":1621800531610,"results":"54","hashOfConfig":"40"},{"size":2931,"mtime":1619811822001,"results":"55","hashOfConfig":"40"},{"size":1157,"mtime":1621382740783,"results":"56","hashOfConfig":"40"},{"size":8757,"mtime":1619812324884,"results":"57","hashOfConfig":"40"},{"size":838,"mtime":1619811681047,"results":"58","hashOfConfig":"40"},{"size":21163,"mtime":1621433179939,"results":"59","hashOfConfig":"40"},{"size":4830,"mtime":1621777377751,"results":"60","hashOfConfig":"40"},{"size":28249,"mtime":1621814452608,"results":"61","hashOfConfig":"40"},{"size":8617,"mtime":1619811152605,"results":"62","hashOfConfig":"40"},{"size":2633,"mtime":1619807083181,"results":"63","hashOfConfig":"40"},{"size":583,"mtime":1621384892400,"results":"64","hashOfConfig":"40"},{"size":1557,"mtime":1621381296550,"results":"65","hashOfConfig":"40"},{"size":334,"mtime":1616524236085,"results":"66","hashOfConfig":"40"},{"size":5992,"mtime":1621179777022,"results":"67","hashOfConfig":"40"},{"size":646,"mtime":1616954736946,"results":"68","hashOfConfig":"40"},{"size":2373,"mtime":1621179812680,"results":"69","hashOfConfig":"40"},{"size":1642,"mtime":1619813418344,"results":"70","hashOfConfig":"40"},{"size":2931,"mtime":1621179647105,"results":"71","hashOfConfig":"40"},{"size":4133,"mtime":1621190885593,"results":"72","hashOfConfig":"40"},{"size":1126,"mtime":1616074189643,"results":"73","hashOfConfig":"40"},{"size":2105,"mtime":1621179738742,"results":"74","hashOfConfig":"40"},{"size":1124,"mtime":1618426125778,"results":"75","hashOfConfig":"40"},{"size":427,"mtime":1621433162790,"results":"76","hashOfConfig":"40"},{"size":433,"mtime":1621789661888,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"11hdaaw",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\index.js",[],["163","164"],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\reportWebVitals.js",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\App.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\UserContext.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\CartContext.jsx",["165","166"],"import { createContext, useState, useEffect } from \"react\";\r\nimport { getFirestore } from \"../firebase\";\r\n\r\n// Creamos el espacio de memoria\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    \r\n    const [cart, setCart] = useState([])\r\n    const [quantityproductsInCart, setQuantityproductsInCart] = useState(0)\r\n    const [subtotalCart, setSubtotalCart] = useState(0)\r\n    const [promotionalDiscount, setPromotionalDiscount] = useState('')\r\n    const [totalCart] = useState()\r\n    const [promocodes, setPromocodes] = useState([])\r\n    \r\n \r\n\r\n    const addDiscount = (e) => {\r\n        let code = e.target.value\r\n        let today = Date.now()\r\n        promocodes.filter(promocode => {\r\n            if (promocode.code === code) {\r\n\r\n                if (today > promocode.start.toMillis() && today < promocode.end.toMillis()) {\r\n                    setPromotionalDiscount({ code: promocode.code, discount: promocode.discountRate, mount: subtotalCart * (promocode.discountRate) / 100 })\r\n                    sessionStorage.setItem('promotionalDiscount', JSON.stringify({ code: promocode.code, discount: promocode.discountRate, mount: subtotalCart * (promocode.discountRate) / 100 }))\r\n                } else {\r\n                    alert(`¡El cupón «${code}» ya venció!`)\r\n                }\r\n\r\n            } else {\r\n                setPromotionalDiscount('')\r\n            }\r\n        })\r\n    }\r\n\r\n    const addItemToCart = (itemId, q, p, c, n) => {\r\n\r\n        if (isInCart(itemId)) {\r\n\r\n            updateItem(itemId, q, p, c, n)\r\n\r\n        } else {\r\n            setCart([...cart, { id: itemId, quantity: q, unitPrice: p, category: c, currency: \"ARS\", name: n }])\r\n        }\r\n\r\n    }\r\n\r\n    const removeItemCart = (itemId) => {\r\n\r\n        if (isInCart(itemId)) {\r\n\r\n            const index = cart.findIndex(product => product.id === itemId)\r\n            const newCart = [...cart];\r\n            newCart.splice(index, 1)\r\n            setCart(newCart)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const quantityproductsAdded = () => {\r\n        let quantity = 0\r\n\r\n        cart.forEach(product => {\r\n            quantity += quantityItemAdded(product.id)\r\n        })\r\n\r\n        setQuantityproductsInCart(quantity)\r\n\r\n        const subtotal = cart.reduce(function (subtotal, element) {\r\n            return subtotal += element.unitPrice * element.quantity;\r\n        }, 0);\r\n\r\n        setSubtotalCart(subtotal)\r\n    }\r\n\r\n\r\n    const clearCart = () => {\r\n        cart.length !== 0 && setCart([])\r\n    }\r\n\r\n    const isInCart = (x) => {\r\n\r\n        const index = cart.findIndex(product => product.id === x)\r\n\r\n        return index >= 0 ? true : false;\r\n    }\r\n\r\n    const quantityItemAdded = (itemId) => {\r\n        if (isInCart(itemId)) {\r\n\r\n            const itemQuantityItemAdded = cart.find(product => product.id === itemId).quantity\r\n            return itemQuantityItemAdded\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    const updateItem = (itemId, q, p, c , n) => {\r\n        const index = cart.findIndex(product => product.id === itemId)\r\n        const newCart = [...cart];\r\n        newCart.splice(index, 1, { id: itemId, quantity: q, unitPrice: p, category: c, currency: \"ARS\", name: n })\r\n        setCart(newCart)\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const db = getFirestore();\r\n        console.log('CartContext - promocode')\r\n        const promocodeCollection = db.collection(\"promocode\")\r\n        promocodeCollection.get().then((value) => {\r\n            const promocodeList = value.docs.map(element => { return { ...element.data() } })\r\n\r\n            setPromocodes(promocodeList)\r\n        })\r\n\r\n        localStorage.getItem(\"cart\") !== null && localStorage.getItem(\"cart\").length !== 0  && setCart(JSON.parse(localStorage.getItem(\"cart\")))\r\n        sessionStorage.getItem(\"promotionalDiscount\") != null && setPromotionalDiscount(JSON.parse(sessionStorage.getItem(\"promotionalDiscount\")))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n        quantityproductsAdded()\r\n    }, [cart])\r\n\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={{clearCart, cart, subtotalCart, totalCart, promotionalDiscount, addDiscount, addItemToCart, isInCart, quantityItemAdded, updateItem, quantityproductsInCart, removeItemCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\CommercialContext.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\OrderContext.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\routes\\routes.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\context\\MercadoPagoContext.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ScrollToTop\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\NavBar\\index.jsx",["167","168","169","170"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.scss';\r\nimport $ from 'jquery';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport ItemNavContainer from '../../containers/ItemNavContainer';\r\nimport ItemDropdown from '../../containers/ItemDropdown';\r\nimport ListDropdownContainer from '../../containers/ListDropdownContainer';\r\nimport CartWidgetComponent from '../CartWidget';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect,useContext } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    const { user } = useContext(UserContext)\r\n    \r\n    const actualLocation = useLocation()\r\n\r\n\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n\r\n    })\r\n\r\n    $('.dropdown-item, #cartLogo').on('click', (e)=> $('#navbarsExampleDefault').collapse('hide'))\r\n\r\n\r\n    useEffect(() => {\r\n        const efectNav = () => {\r\n            if ($(\".navbar\").offset().top > 20) {\r\n                $(\".fixed-top\").addClass(\"top-nav-collapse\");\r\n\r\n            } else {\r\n                $(\".fixed-top\").removeClass(\"top-nav-collapse\");\r\n\r\n            }\r\n        }\r\n\r\n        var navLinks = Array.from(document.getElementsByClassName('nav-link'))\r\n        navLinks.map(link=>{\r\n            link.addEventListener('click', ()=>{window.innerWidth < 768 && $('.collapse').collapse('toggle')})\r\n        })\r\n\r\n        if(actualLocation.pathname === '/'){\r\n            \r\n            /* Navbar Scripts */\r\n            // jQuery to collapse the navbar on scroll\r\n            $(window).on('scroll load',efectNav);\r\n        }\r\n\r\n        return () => {\r\n            $(window).off('scroll load',efectNav);\r\n            navLinks.map(link=>{\r\n                link.removeEventListener('click', ()=>{window.innerWidth < 768 && $('.collapse').collapse('toggle')})\r\n            })\r\n        }\r\n    }, [actualLocation])\r\n\r\n    \r\n \r\n\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-md navbar-dark navbar-custom fixed-top popup-with-move-anim ${(actualLocation.pathname !== '/')?'top-nav-collapse':'' }`}>\r\n\r\n\r\n            <Link className=\"navbar-brand logo-image\" to='/'>\r\n                <img id=\"logo\" src={`${process.env.PUBLIC_URL}/images/JPL-0111.svg`} alt=\"alternative\"></img>\r\n            </Link>\r\n            \r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-awesome fas fa-bars\"></span>\r\n                <span className=\"navbar-toggler-awesome fas fa-times\"></span>\r\n            </button>\r\n\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    {!user&&\r\n                        (\r\n                                <li className=\"nav-item logged-out\">\r\n                                    <a className=\"nav-link\" href=\"/change\" data-toggle=\"modal\" data-target=\"#signinModal\">INGRESAR</a>\r\n                                </li>\r\n                        )\r\n\r\n                    }\r\n                    <ItemNavContainer  href={'/booking'} name={'RESERVAR TURNO'}/>\r\n                    <ItemNavContainer  href={'/tienda'} name={'TIENDA'}/>\r\n                    {/* <ListDropdownContainer name={\"TIENDA\"} href={'/tienda'}>\r\n                        <ItemDropdown href={'/tienda/planes'} name={'PLANES'}/>\r\n                        <div className=\"dropdown-items-divide-hr\"></div>\r\n                        <ItemDropdown href={'/tienda/recetas'} name={'RECETAS'}/>\r\n                        <div className=\"dropdown-items-divide-hr\"></div>\r\n                        <ItemDropdown href={'/tienda/turnos'} name={'TURNOS ONLINE'}/>\r\n                    </ListDropdownContainer> */}\r\n\r\n\r\n                    <CartWidgetComponent href={'/cart'}/>\r\n                   {user?\r\n                            (<li className=\"nav-item dropdown no-arrow\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/change\"\r\n                                    id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                        <span className=\"mr-2 d-none d-lg-inline text-gray-600 text-uppercase\">{user.email}</span>\r\n                                        {/* <img className=\"img-profile rounded-circle\" src=\"img/undraw_profile.svg\"/> */}\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in text-uppercase\" aria-labelledby=\"userDropdown\">\r\n                                        <Link className=\"dropdown-item\" to=\"/welcome\">\r\n                                            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\" aria-hidden=\"true\"></i>\r\n                                            <span className=\"item-text\">MIS DATOS</span>\r\n                                        </Link>\r\n                                        <a className=\"dropdown-item\" href=\"/change\">\r\n                                            <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\" aria-hidden=\"true\"></i>\r\n                                            <span className=\"item-text\">CONFIGURACIÓN</span>\r\n                                        </a>\r\n                                        <a className=\"dropdown-item\" href=\"/change\">\r\n                                            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\" aria-hidden=\"true\"></i>\r\n                                            <span className=\"item-text\">MI ACTIVIDAD</span>\r\n                                        </a>\r\n                                        <div className=\"dropdown-divider\"></div>\r\n                                        <a className=\"dropdown-item\" href=\"/change\" data-toggle=\"modal\" data-target=\"#logoutModal\">\r\n                                            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\" aria-hidden=\"true\"></i>\r\n                                            <span className=\"item-text\">CERRAR SESIÓN</span>\r\n                                        </a>\r\n                                </div>\r\n                            </li>)\r\n                        :   \r\n                            (\r\n                                <span className=\"nav-item social-icons\">\r\n                                    <span className=\"fa-stack\">\r\n                                        <a href=\"https://www.instagram.com/juampilabollita/\">\r\n                                            <span className=\"hexagon\"></span>\r\n                                            <i className=\"fab fa-instagram fa-stack-1x\"></i>\r\n                                        </a>\r\n                                    </span>\r\n                                    <span className=\"fa-stack\">\r\n                                        <a href=\"https://www.facebook.com/juanpablo.labollita\">\r\n                                            <span className=\"hexagon\"></span>\r\n                                            <i className=\"fab fa-facebook-f fa-stack-1x\"></i>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            )\r\n                    } \r\n\r\n                </ul>\r\n                \r\n            </div>\r\n        </nav>\r\n        \r\n  \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\AuthModal\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\routes\\helperRoutes.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ThanksContainer.jsx",["171","172","173"],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\HomeContainer.jsx",["174","175","176"],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemDetailContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\BookingContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\CartContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\EmailContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\WelcomeContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemListContainer.jsx",["177"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Item from '../components/Item';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CommercialContext } from \"../context/CommercialContext\";\r\n\r\nconst ItemListContainer = (props) => {\r\n    \r\n    const { categoryId } = useParams()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const {products, numberToPrice} = useContext(CommercialContext)\r\n\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        \r\n        setTimeout(() => {\r\n                setIsLoading(false);\r\n            \r\n        }, 1000);\r\n        \r\n        return () => {\r\n                setIsLoading(false);\r\n        }\r\n            \r\n    }, [categoryId])\r\n\r\n\r\n\r\n    if(isLoading || products.length === 0){\r\n        return (\r\n            < >\r\n                <div className='loadingComponent'>\r\n                    <p > Cargando productos </p>    \r\n                    <div className=\"spinner-grow bounce1\" role=\"status\">\r\n                        <span className=\"sr-only\">Cargando Productos</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow bounce2\" role=\"status\">\r\n                        <span className=\"sr-only\">Cargando Productos</span>\r\n                    </div>\r\n                    <div className=\"spinner-grow bounce3\" role=\"status\">\r\n                        <span className=\"sr-only\">Cargando Productos</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"services\" className=\"cards-2\">\r\n                <div className=\"container\" style={{textAlign:\"center\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"section-title\">{categoryId?categoryId:'TIENDA'}</div>\r\n                        <h2>Elige la opción ideal que mejor<br></br> se adapte a tus objetivos</h2>\r\n                    </div> \r\n                </div> \r\n\r\n                {categoryId?\r\n                    ( <>\r\n                    \r\n                    <div className=\"ex-basic-1\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"breadcrumbs\">\r\n                                        <Link to=\"/tienda\"> Tienda </Link>\r\n                                        {/* <a href=\"index.html\">Tienda</a> */}\r\n                                        <i className=\"fa fa-angle-double-right\"></i>\r\n                                        {categoryId?<Link to={`/tienda/${categoryId}`}>{categoryId}</Link>:null}\r\n                                        {/* <a href=\"index.html\">{productsSelected.categoryId}</a> */}\r\n                                    </div> \r\n                                </div> \r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                    </>\r\n                    ) :null \r\n                }\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n\r\n                        {products.length !== 0?\r\n                            (categoryId?\r\n                                products.map((product, index)=>{\r\n                                    if(product.category === categoryId){\r\n\r\n                                        return (\r\n                                            <Item key={index}  \r\n                                                product={product}\r\n                                                numberToPrice={numberToPrice}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                })\r\n                                :products.map((product, index)=>{\r\n                                    return (\r\n                                        <Item key={index}  \r\n                                            product={product}\r\n                                            numberToPrice={numberToPrice}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            )\r\n                            :<>\r\n                                <h4>No hemos encontrado productos para ésta categoría</h4>\r\n                                <Link to=\"/tienda\" className=\"btn-solid-lg page-scroll\">VER OTROS PRODUCTOS</Link>\r\n                            </>\r\n\r\n                        }\r\n\r\n                    </div> \r\n                </div> \r\n                </div> \r\n            </div>\r\n       </>\r\n    )\r\n    \r\n}\r\nexport default ItemListContainer;","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\CheckoutContainer.jsx",["178","179"],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\OrderContainer.jsx",["180","181"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { OrderContext } from \"../context/OrderContext\";\r\nimport { CommercialContext } from \"../context/CommercialContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ItemOrder from '../components/ItemOrder';\r\nimport EmailConfirmModal from '../components/EmailConfirmModal';\r\nimport $ from 'jquery';\r\nimport { toast } from \"react-toastify\";\r\nimport {getFileFromDB} from '../firebase'\r\nimport { openPopupWidget, CalendlyEventListener } from \"react-calendly\";\r\nimport './OrderContainer.scss';\r\n\r\n\r\nconst OrderContainer = (props) => {\r\n    const {getProductById} = useContext(CommercialContext)\r\n    const {getOrderById, updateOrder} = useContext(OrderContext)\r\n    const {order_id} = useParams()\r\n    const [order, setOrder] = useState()\r\n    const [currentProductId, setCurrentProductId] = useState()\r\n    const [emailConfirmation, setEmailConfirmation] = useState()\r\n    \r\n\r\n    const reschedule = (productId, code) => {\r\n            openBookingPopUp(productId, 'reschedulings', code)\r\n    }\r\n\r\n    const cancel = (productId, code) => {\r\n        openBookingPopUp(productId, 'cancellations', code)\r\n    }\r\n\r\n    const openBookingPopUp = (product_id,type, code) =>{\r\n        \r\n        const modal = $('#EmailConfirmModal')\r\n        setCurrentProductId(product_id)\r\n        emailConfirmation === undefined?\r\n        modal.modal('show')\r\n        \r\n        :   (\r\n            code?\r\n            openPopupWidget({ url:`https://calendly.com/${type}/${code}?primary_color=14bf98`,style:{minWidth: '360px', height: '1000px',overflow: 'hidden'}})\r\n            :openPopupWidget({ url:\"https://calendly.com/agustintafura/15min?primary_color=14bf98\",style:{minWidth: '360px', height: '1000px',overflow: 'hidden'}})\r\n            )\r\n    }\r\n    \r\n    const downloadFile = (fileName) =>{\r\n        const modal = $('#EmailConfirmModal')\r\n        emailConfirmation === undefined?\r\n        modal.modal('show')\r\n        \r\n        :   (\r\n            getFileFromDB(fileName)\r\n        )\r\n    }\r\n\r\n    const getOrderData =  async ()=>{\r\n        \r\n        \r\n        getOrderById(order_id)\r\n        .then(order=>{\r\n            setOrder(order)\r\n            \r\n            const form = document.getElementById('emailConfirmation-form')\r\n            form&&(\r\n            form.addEventListener(\"submit\", (e) => {\r\n                e.preventDefault()\r\n                e.stopImmediatePropagation()\r\n                var email = document.getElementById('email-confirmation').value\r\n                if(email === order.buyer.email){\r\n                    $('#EmailConfirmModal').modal('hide')\r\n                    setEmailConfirmation(email)\r\n                    toast.success('Ahora puedes descargar tu contenido, intentalo nuevamente!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        \r\n                    });\r\n                } else {\r\n        \r\n                    toast.error('El Email no coincide con el utilizado en ésta compra', {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                    });\r\n                }                    \r\n            })\r\n)\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        getOrderData()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div id=\"services\" className=\"cards-2\">\r\n                <div className=\"container\">\r\n\r\n                    <h2 style={{ fontFamily: \"Montserrat-Bold\", textAlign:\"left\"}}><span\r\n                            style={{ fontFamily: \"Mansalva\",fontSize:'3rem'}}>Mis </span> productos\r\n                    </h2>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            {\r\n                                emailConfirmation === undefined?\r\n                                    <EmailConfirmModal />\r\n                                : (\r\n                                    (order === undefined)?\r\n\r\n                                        (\r\n                                        <>\r\n            \r\n                                            <div className='loadingComponent' style={{top:'25vh'}}>\r\n                                                <p> Cargando productos </p>\r\n                                                <div className=\"spinner-grow bounce1\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Cargando Productos</span>\r\n                                                </div>\r\n                                                <div className=\"spinner-grow bounce2\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Cargando Productos</span>\r\n                                                </div>\r\n                                                <div className=\"spinner-grow bounce3\" role=\"status\">\r\n                                                    <span className=\"sr-only\">Cargando Productos</span>\r\n                                                </div>\r\n                                            </div>\r\n            \r\n                                        </>\r\n            \r\n                                        )\r\n                                    :\r\n                                        (order.items.map( (item,index)=>{\r\n            \r\n                                            var product = getProductById(item.id)\r\n                                            if(product !== undefined){\r\n                                                return(\r\n                                                    <ItemOrder \r\n                                                        key={index} product={product} \r\n                                                        downloadFile={downloadFile} \r\n                                                        openBookingPopUp={openBookingPopUp} \r\n                                                        order={order} \r\n                                                        cancel={cancel}\r\n                                                        reschedule={reschedule} \r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    )\r\n            \r\n            \r\n                                        \r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n           \r\n            {order !== undefined&&(\r\n                <>                  \r\n                    <CalendlyEventListener \r\n\r\n                        onEventScheduled={(e)=> {\r\n                            e.preventDefault();\r\n\r\n                            const eventLink =  e.data.payload.event.uri.toString()\r\n                            const invitee = e.data.payload.invitee.uri\r\n                            const eventCode = eventLink.substring(eventLink.lastIndexOf('scheduled_events/') + 17, eventLink.length)\r\n                            const inviteeCode = invitee.substring(invitee.lastIndexOf('invitees/') + 9, invitee.length)\r\n\r\n                            if(order.booking === undefined){\r\n                                order.booking = {}\r\n                            }\r\n                            order.booking[currentProductId] = {\r\n                                    eventCode: eventCode,\r\n                                    eventLink: eventLink,\r\n                                    cancelCode: inviteeCode,\r\n                                    cancelLink: `https://calendly.com/cancellations/${inviteeCode}`,\r\n                                    rescheduleLink: `https://calendly.com/reschedulings/${inviteeCode}`\r\n                                }\r\n\r\n                            \r\n                            console.log(11, order)\r\n                            updateOrder(order_id,  {booking:order.booking})\r\n                            .then((e)=>{\r\n                                // localStorage.setItem('currentOrderBookingUpdated', JSON.stringify({order:order, order_id:order_id, orderB:order.booking, bookingIdUpdated:currentProductId}));\r\n                                getOrderData()\r\n                                })\r\n                        }}\r\n                    />\r\n                </>\r\n            )}\r\n       \r\n                            \r\n        </>\r\n\r\n  )\r\n}\r\n\r\nexport default OrderContainer\r\n","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\firebase\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemNavContainer.jsx",["182"],"import { Link } from \"react-router-dom\";\r\nimport $ from 'jquery'\r\nconst ItemNavContainer = ({id, href, name, datatoggle, datatarget, children}) => {\r\n\r\n    \r\n    return (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link \r\n                    id={id} className=\"nav-link page-scroll\" to={href} \r\n                    {...datatoggle && {dataToggle:`${datatoggle}`}} {...datatarget && {dataTarget:datatarget}}>\r\n                         {name} {children} \r\n                </Link>\r\n            </li>\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default ItemNavContainer;","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ListDropdownContainer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\ItemDropdown.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\NotFound\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\CartWidget\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemDetail\\index.jsx",["183"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport ItemCount from \"../ItemCount\"\r\nimport {CartContext} from \"../../context/CartContext\";\r\n\r\nconst ItemDetail = ({product, numberToPrice}) => {\r\n\r\n    const {addItemToCart, isInCart, quantityItemAdded} = useContext(CartContext)\r\n    const [contador, setContador] = useState(1)\r\n    const [quantityAdded, setQuantityAdded] = useState([])\r\n    const showButton = true\r\n    \r\n\r\n\r\n    const onAdd = (stock) => {\r\n\r\n        if (contador < stock) {\r\n            setContador(contador + 1)           \r\n        }\r\n        \r\n    }\r\n    \r\n    const onRemove = (stock) => {\r\n        if (contador > 1) {\r\n            setContador(contador - 1)\r\n        }\r\n    }\r\n\r\n    const addToCart = () => {\r\n        addItemToCart(product.id, contador, product.price, product.category, product.name)\r\n        setQuantityAdded(contador)\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        if(isInCart(product.id)) {\r\n            setContador(quantityItemAdded(product.id))\r\n            setQuantityAdded(quantityItemAdded(product.id))\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n\r\n            {/* <!-- Card --> */}\r\n            <div  className=\"row no-gutters\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                    <div className=\"image-container\">\r\n                        <img className=\"img-fluid\" src={`${process.env.PUBLIC_URL}/images/${product.image}`} alt=\"alternative\"></img>\r\n                    </div> \r\n                    </div>\r\n                    <div className=\"col-12 col-lg-6 rounded-right card-text\">\r\n                        <h1 className=\"card-title\">{product.name}</h1>\r\n                        <h3> {product.description} </h3>\r\n                        <ul className=\"list-unstyled li-space-lg\">\r\n                        </ul>\r\n                        {/* <p className=\"price\"><span>${numberToPrice(product.price)}</span></p> */}\r\n                        <ItemCount  showButton={showButton} isInCart={isInCart(product.id)} product={product} onRemove={onRemove} onAdd={onAdd} contador={contador} quantityAdded={quantityAdded} addToCart={addToCart}   />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div> \r\n        </div> \r\n\r\n        \r\n         </>\r\n    )\r\n}\r\n\r\nexport default ItemDetail","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\EmailConfirmModal\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\Item\\index.jsx",["184"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ItemCount from \"../ItemCount\";\r\nimport {CartContext} from \"../../context/CartContext\";\r\n\r\n\r\nconst Item = ({product, numberToPrice}) => {\r\n\r\n    const {addItemToCart, isInCart, quantityItemAdded} = useContext(CartContext)\r\n    const [contador, setContador] = useState(1)\r\n    const [quantityAdded, setQuantityAdded] = useState([])\r\n    const showButton = true\r\n    \r\n    const onAdd = (stock) => {\r\n\r\n        if (contador < stock) {\r\n            setContador(contador + 1)           \r\n        }\r\n        \r\n    }\r\n    \r\n    const onRemove = (stock) => {\r\n        if (contador > 1) {\r\n            setContador(contador - 1)\r\n        }\r\n    }\r\n\r\n    const addToCart = () => {\r\n        addItemToCart(product.id, contador, product.price, product.category, product.name)\r\n        setQuantityAdded(contador)\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        if(isInCart(product.id)) {\r\n            setContador(quantityItemAdded(product.id))\r\n            setQuantityAdded(quantityItemAdded(product.id))\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/* <!-- Card --> */}\r\n                <div  className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <Link to={`/product/${product.id}`}>\r\n                            <img className=\"img-fluid\" src={`${process.env.PUBLIC_URL}/images/${product.image}`} alt=\"alternative\"></img>\r\n                        </Link>\r\n                            \r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{product.name}</h3>\r\n                        <p> {product.description} </p>\r\n                        <ul className=\"list-unstyled li-space-lg\">\r\n                            {(product.features)?                         \r\n                            (product.features).map((feature, index)=>{\r\n                                \r\n                                return ( \r\n                                <li key={index} className=\"media\">\r\n                                    <i className=\"fas fa-square\"></i>\r\n                                    <div className=\"media-body\">{feature}</div>\r\n                                </li>\r\n                                ) \r\n                            })                            \r\n                            :null}\r\n\r\n                        </ul>\r\n                        <p className=\"price\"><span>$ {numberToPrice(product.price)}</span></p>\r\n                        <ItemCount showButton={showButton} isInCart={isInCart(product.id)} product={product} onRemove={onRemove} onAdd={onAdd} contador={contador} quantityAdded={quantityAdded} addToCart={addToCart}  />\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\n","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemCart\\index.jsx",["185"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ItemCountComponent from \"../ItemCount\";\r\nimport {CartContext} from \"../../context/CartContext\";\r\n\r\n\r\nconst ItemCart = ({product, numberToPrice}) => {\r\n\r\n\r\n    const {updateItem,removeItemCart, isInCart, quantityItemAdded} = useContext(CartContext)\r\n\r\n    const [contador, setContador] = useState(1)\r\n    const [quantityAdded, setQuantityAdded] = useState([])\r\n    const showButton = false\r\n\r\n    const onAdd = (stock) => {\r\n\r\n        if (contador < stock) {\r\n            setContador(contador + 1)           \r\n            updateItem(product.id, contador + 1, product.price)\r\n        }\r\n        \r\n    }\r\n    \r\n    const onRemove = (stock) => {\r\n\r\n        if (contador > 1) {\r\n            setContador(contador - 1)\r\n            updateItem(product.id, contador - 1,product.price)\r\n        }\r\n    }\r\n\r\n    const addToCart = () => {\r\n\r\n    }\r\n\r\n    const removeFromCart = (e) => {\r\n        let element = document.getElementById(product.id)\r\n        element.classList.add('animate__bounceOut') \r\n        element.addEventListener('animationend', () => {\r\n            removeItemCart(product.id)\r\n            element.classList.remove('animate__bounceOut') \r\n          });\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n        if(isInCart(product.id)) {\r\n            setContador(quantityItemAdded(product.id))\r\n            setQuantityAdded(quantityItemAdded(product.id))\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div id={`${product.id}`} className=\"row mb-4 no-gutters \">\r\n                <div className=\"col-12 col-lg-3\">\r\n                    <div className=\"image-container\">\r\n                        <Link to={`/product/${product.id}`}>\r\n                            <img className=\"img-fluid\" src={`${process.env.PUBLIC_URL}/images/${product.image}`} alt=\"alternative\"/> \r\n                        </Link>                      \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-9 rounded-right card-text row no-gutters\">\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <h4 className=\"card-title\">{product.name}</h4>\r\n                        {(product.features)?                         \r\n                            (product.features).map((feature, index)=>{\r\n                                \r\n                                return (\r\n                                    <p  key={index} className=\"mb-0 text-muted text-uppercase small\">{feature}</p> \r\n\r\n                                ) \r\n                            })                            \r\n                        :null}\r\n\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5\" style={{alignSelf: 'center'}}>\r\n                    <ItemCountComponent showButton={showButton} isInCart={isInCart(product.id)} product={product} onRemove={onRemove} onAdd={onAdd} contador={contador} quantityAdded={quantityAdded} addToCart={addToCart}  />\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-3\" style={{alignSelf: 'center'}}>\r\n                        <div style={{justifyContent:'space-between'}} className=\"d-flex  \">\r\n                            <div onClick={(e) => {removeFromCart(e)}}>\r\n                                <a href=\"#!\" type=\"button\"\r\n                                    className=\"card-link-secondary small text-uppercase mr-3\"\r\n                                    style={{color:'var(--primary)'}}\r\n                                    >\r\n                                    <i className=\"fas fa-trash-alt mr-1\" aria-hidden=\"true\"></i>\r\n                                        Quitar\r\n                                </a>\r\n                            </div>\r\n                            <p className=\"mb-0\"><span><strong>$ {numberToPrice(product.price * contador)}</strong></span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr className=\"mb-4\"></hr>                \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemCart\r\n\r\n","C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ModalError\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemOrder\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\components\\ItemCount\\index.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\containers\\Footer.jsx",[],"C:\\Users\\agust\\Desktop\\CODERHOUSE - React\\JPL-app\\src\\utils\\data\\index.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":21,"column":37,"nodeType":"192","messageId":"193","endLine":21,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":127,"column":8,"nodeType":"196","endLine":127,"endColumn":14,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":20},{"ruleId":"198","severity":1,"message":"202","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":29},{"ruleId":"190","severity":1,"message":"203","line":40,"column":26,"nodeType":"192","messageId":"193","endLine":40,"endColumn":28},{"ruleId":"190","severity":1,"message":"203","line":53,"column":30,"nodeType":"192","messageId":"193","endLine":53,"endColumn":32},{"ruleId":"194","severity":1,"message":"204","line":88,"column":8,"nodeType":"196","endLine":88,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":142,"column":59,"nodeType":"208","endLine":142,"endColumn":136},{"ruleId":"206","severity":1,"message":"207","line":143,"column":59,"nodeType":"208","endLine":143,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":35,"column":21,"nodeType":"200","messageId":"211","endLine":35,"endColumn":28},{"ruleId":"209","severity":1,"message":"212","line":43,"column":33,"nodeType":"200","messageId":"211","endLine":43,"endColumn":37},{"ruleId":"213","severity":1,"message":"214","line":48,"column":49,"nodeType":"215","messageId":"216","endLine":48,"endColumn":51},{"ruleId":"190","severity":1,"message":"217","line":92,"column":62,"nodeType":"192","messageId":"218","endLine":92,"endColumn":64},{"ruleId":"190","severity":1,"message":"203","line":126,"column":43,"nodeType":"192","messageId":"193","endLine":126,"endColumn":45},{"ruleId":"194","severity":1,"message":"219","line":165,"column":4,"nodeType":"196","endLine":165,"endColumn":21,"suggestions":"220"},{"ruleId":"194","severity":1,"message":"221","line":91,"column":8,"nodeType":"196","endLine":91,"endColumn":10,"suggestions":"222"},{"ruleId":"190","severity":1,"message":"217","line":134,"column":71,"nodeType":"192","messageId":"218","endLine":134,"endColumn":73},{"ruleId":"198","severity":1,"message":"223","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":9},{"ruleId":"194","severity":1,"message":"224","line":39,"column":8,"nodeType":"196","endLine":39,"endColumn":10,"suggestions":"225"},{"ruleId":"194","severity":1,"message":"224","line":40,"column":8,"nodeType":"196","endLine":40,"endColumn":10,"suggestions":"226"},{"ruleId":"194","severity":1,"message":"224","line":53,"column":8,"nodeType":"196","endLine":53,"endColumn":10,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'quantityproductsAdded'. Either include it or remove the dependency array.","ArrayExpression",["230"],"no-unused-vars","'ItemDropdown' is defined but never used.","Identifier","unusedVar","'ListDropdownContainer' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'getOrderById', 'location_params', 'order_id', 'paymentData', and 'updateOrder'. Either include them or remove the dependency array.",["231"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-redeclare","'options' is already defined.","redeclared","'next' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'errors', 'isEmpty', 'states', and 'watch'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'getOrderData'. Either include it or remove the dependency array.",["233"],"'$' is defined but never used.","React Hook useEffect has missing dependencies: 'isInCart', 'product.id', and 'quantityItemAdded'. Either include them or remove the dependency array. If 'setContador' needs the current value of 'product.id', you can also switch to useReducer instead of useState and read 'product.id' in the reducer.",["234"],["235"],["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"245","fix":"248"},"Update the dependencies array to be: [cart, quantityproductsAdded]",{"range":"249","text":"250"},"Update the dependencies array to be: [getOrderById, location_params, order_id, paymentData, updateOrder]",{"range":"251","text":"252"},"Update the dependencies array to be: [errors, isEmpty, location_params, states, watch]",{"range":"253","text":"254"},"Update the dependencies array to be: [getOrderData]",{"range":"255","text":"256"},"Update the dependencies array to be: [isInCart, product.id, quantityItemAdded]",{"range":"257","text":"258"},{"range":"259","text":"258"},{"range":"260","text":"258"},[4058,4064],"[cart, quantityproductsAdded]",[3154,3156],"[getOrderById, location_params, order_id, paymentData, updateOrder]",[4935,4952],"[errors, isEmpty, location_params, states, watch]",[3307,3309],"[getOrderData]",[1086,1088],"[isInCart, product.id, quantityItemAdded]",[1123,1125],[1487,1489]]